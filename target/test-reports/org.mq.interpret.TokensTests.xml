<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Joshua-Desktop" name="org.mq.interpret.TokensTests" tests="56" errors="0" failures="8" skipped="0" time="0.051" timestamp="2022-08-25T02:07:35">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="C:\Program Files\Java\jre1.8.0_341\bin"/><property name="java.vm.version" value="25.341-b10"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=";"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="AU"/><property name="user.script" value=""/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value=""/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="D:\Uni Stuff\IT\COMP3000\Assignment 1"/><property name="java.runtime.version" value="1.8.0_341-b10"/><property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/><property name="java.endorsed.dirs" value="C:\Program Files\Java\jre1.8.0_341\lib\endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="C:\Users\Joshua\AppData\Local\Temp\"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="user.variant" value=""/><property name="os.name" value="Windows 10"/><property name="sun.jnu.encoding" value="Cp1252"/><property name="jnidispatch.path" value="C:\Users\Joshua\AppData\Local\Temp\jna--2070369658\jna8296912335289949464.dll"/><property name="java.library.path" value="C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\AdoptOpenJDK\jdk-11.0.11.9-hotspot\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Program Files\Eclipse Foundation\jdk-17.0.0.35-hotspot\bin;C:\Users\Joshua\AppData\Local\Programs\Python\Python39\Scripts;C:\Program Files\nodejs\;C:\Users\Joshua\AppData\Local\Microsoft\WindowsApps;C:\Users\Joshua\AppData\Local\GitHubDesktop\bin;C:\Users\Joshua\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Joshua\AppData\Roaming\npm;."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.0"/><property name="user.home" value="C:\Users\Joshua"/><property name="user.timezone" value="Australia/Sydney"/><property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/><property name="file.encoding" value="Cp1252"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="D:\Uni Stuff\IT\COMP3000\Assignment 1\sbt-launch.jar"/><property name="user.name" value="Joshua"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="xsbt.boot.Boot"/><property name="java.home" value="C:\Program Files\Java\jre1.8.0_341"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.windows.WToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_341"/><property name="java.ext.dirs" value="C:\Program Files\Java\jre1.8.0_341\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/><property name="sun.boot.class.path" value="C:\Program Files\Java\jre1.8.0_341\lib\resources.jar;C:\Program Files\Java\jre1.8.0_341\lib\rt.jar;C:\Program Files\Java\jre1.8.0_341\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_341\lib\jce.jar;C:\Program Files\Java\jre1.8.0_341\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_341\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_341\classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="sun.stderr.encoding" value="cp850"/><property name="file.separator" value="\"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.stdout.encoding" value="cp850"/><property name="sun.desktop" value="windows"/><property name="sun.cpu.isalist" value="amd64"/>
    </properties>
                     <testcase classname="org.mq.interpret.TokensTests" name="PARSING: pattern match should handle a number" time="0.018">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="PARSING: pattern match should handle negative number" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="PARSING: pattern match should handle function symbols" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="PARSING: pattern match should handle names" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="PARSING: pattern match should handle composite symbols" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="strToAObj should handle a name" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="strToAObj should handle a number" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="strToAObj should handle a negative number" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="strToAObj should handle an operator" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="tokensToAObjs should handle a single name" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="tokensToAObjs should handle a single number" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="tokensToAObjs should handle a simple expression" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="tokensToAObjs should handle a more-complex expression" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="SIMPLE EVAL: should add two numbers" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="SIMPLE EVAL: should mod two numbers" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="SIMPLE EVAL: should do iota number" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="SIMPLE EVAL: should do membership" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="SIMPLE EVAL: should do monadic rho" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="SIMPLE EVAL: should do dyadic rho" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="SIMPLE EVAL: should do take" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="MIXED SHAPE: should add number and vector" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="MIXED SHAPE: should treat one-element vector as scalar" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="MIXED SHAPE: should max vector and vector" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="VARIABLES: should work" time="0.015">
                                                 <failure message="TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.ASymbol.apply(&quot;x&quot;), Interpret.AOperator.apply(&quot;+&quot;), Interpret.ANumber.apply(3.0), Interpret.AOperator.apply(&quot;mul&quot;), Interpret.ASymbol.apply(&quot;x&quot;), Interpret.Assign, Interpret.ANumber.apply(7.0))), Interpret.ANumber.apply(28.0)) was false" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.ASymbol.apply(&quot;x&quot;), Interpret.AOperator.apply(&quot;+&quot;), Interpret.ANumber.apply(3.0), Interpret.AOperator.apply(&quot;mul&quot;), Interpret.ASymbol.apply(&quot;x&quot;), Interpret.Assign, Interpret.ANumber.apply(7.0))), Interpret.ANumber.apply(28.0)) was false
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1685)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at org.mq.interpret.TokensTests.$anonfun$new$24(InterpretTests.scala:171)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="OPERATORS: should reduce a vector with +" time="0.0">
                                                 <failure message="TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AOperator.apply(&quot;+&quot;), Interpret.AOperator.apply(&quot;/&quot;), Interpret.AVector.apply(scala.Array.apply(3.0, 1.0, 4.0, 1.0, 5.0)))), Interpret.ANumber.apply(14.0)) was false" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AOperator.apply(&quot;+&quot;), Interpret.AOperator.apply(&quot;/&quot;), Interpret.AVector.apply(scala.Array.apply(3.0, 1.0, 4.0, 1.0, 5.0)))), Interpret.ANumber.apply(14.0)) was false
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1685)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at org.mq.interpret.TokensTests.$anonfun$new$25(InterpretTests.scala:177)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="OPERATORS: should reduce a matrix with mul" time="0.0">
                                                 <failure message="TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AOperator.apply(&quot;mul&quot;), Interpret.AOperator.apply(&quot;/&quot;), Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(2.0, 3.0, 2.0, 7.0, 1.0), scala.Array.apply(3.0, 1.0, 4.0, 1.0, 5.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]]))))), Interpret.AVector.apply(scala.Array.apply(84.0, 60.0))) was false" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AOperator.apply(&quot;mul&quot;), Interpret.AOperator.apply(&quot;/&quot;), Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(2.0, 3.0, 2.0, 7.0, 1.0), scala.Array.apply(3.0, 1.0, 4.0, 1.0, 5.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]]))))), Interpret.AVector.apply(scala.Array.apply(84.0, 60.0))) was false
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1685)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at org.mq.interpret.TokensTests.$anonfun$new$26(InterpretTests.scala:183)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="OPERATORS: should do outer product" time="0.0">
                                                 <failure message="TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AVector.apply(scala.Array.apply(2.0, 3.0, 1.0)), Interpret.AOperator.apply(&quot;out&quot;), Interpret.AOperator.apply(&quot;.&quot;), Interpret.AOperator.apply(&quot;+&quot;), Interpret.AVector.apply(scala.Array.apply(3.0, 1.0, 4.0, 1.0, 5.0)))), Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(5.0, 3.0, 6.0, 3.0, 7.0), scala.Array.apply(6.0, 4.0, 7.0, 4.0, 8.0), scala.Array.apply(4.0, 2.0, 5.0, 2.0, 6.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]])))) was false" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AVector.apply(scala.Array.apply(2.0, 3.0, 1.0)), Interpret.AOperator.apply(&quot;out&quot;), Interpret.AOperator.apply(&quot;.&quot;), Interpret.AOperator.apply(&quot;+&quot;), Interpret.AVector.apply(scala.Array.apply(3.0, 1.0, 4.0, 1.0, 5.0)))), Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(5.0, 3.0, 6.0, 3.0, 7.0), scala.Array.apply(6.0, 4.0, 7.0, 4.0, 8.0), scala.Array.apply(4.0, 2.0, 5.0, 2.0, 6.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]])))) was false
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1685)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at org.mq.interpret.TokensTests.$anonfun$new$27(InterpretTests.scala:190)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="OPERATORS: should do inner product" time="0.0">
                                                 <failure message="TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(2.0, 3.0), scala.Array.apply(4.0, 1.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]]))), Interpret.AOperator.apply(&quot;+&quot;), Interpret.AOperator.apply(&quot;.&quot;), Interpret.AOperator.apply(&quot;mul&quot;), Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(1.0, 5.0), scala.Array.apply(2.0, 2.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]]))))), Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(8.0, 16.0), scala.Array.apply(6.0, 22.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]])))) was false" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(2.0, 3.0), scala.Array.apply(4.0, 1.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]]))), Interpret.AOperator.apply(&quot;+&quot;), Interpret.AOperator.apply(&quot;.&quot;), Interpret.AOperator.apply(&quot;mul&quot;), Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(1.0, 5.0), scala.Array.apply(2.0, 2.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]]))))), Interpret.AMatrix.apply(scala.Array.apply[Array[Double]](scala.Array.apply(8.0, 16.0), scala.Array.apply(6.0, 22.0))((ClassTag.apply[Array[Double]](scala.runtime.ScalaRunTime.arrayClass(classOf[scala.Double])): scala.reflect.ClassTag[Array[Double]])))) was false
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1685)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at org.mq.interpret.TokensTests.$anonfun$new$28(InterpretTests.scala:199)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="FULL EVAL: should handle bracketted expressions" time="0.0">
                                                 <failure message="TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.LRBrac, Interpret.ANumber.apply(3.0), Interpret.AOperator.apply(&quot;mul&quot;), Interpret.ANumber.apply(4.0), Interpret.RRBrac, Interpret.AOperator.apply(&quot;+&quot;), Interpret.ANumber.apply(5.0))), Interpret.ANumber.apply(17.0)) was false" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.LRBrac, Interpret.ANumber.apply(3.0), Interpret.AOperator.apply(&quot;mul&quot;), Interpret.ANumber.apply(4.0), Interpret.RRBrac, Interpret.AOperator.apply(&quot;+&quot;), Interpret.ANumber.apply(5.0))), Interpret.ANumber.apply(17.0)) was false
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1685)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at org.mq.interpret.TokensTests.$anonfun$new$29(InterpretTests.scala:206)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="FULL EVAL: should handle complex expressions" time="0.001">
                                                 <failure message="TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AVector.apply(scala.Array.apply(5.0, 1.0, 2.0)), Interpret.AOperator.apply(&quot;+&quot;), Interpret.LRBrac, Interpret.ANumber.apply(4.0), Interpret.AOperator.apply(&quot;|&quot;), Interpret.ANumber.apply(5.0), Interpret.RRBrac, Interpret.AOperator.apply(&quot;take&quot;), Interpret.ANumber.apply(2.0), Interpret.AOperator.apply(&quot;drop&quot;), Interpret.AOperator.apply(&quot;iota&quot;), Interpret.ANumber.apply(5.0))), Interpret.AVector.apply(scala.Array.apply(8.0, 4.0, 5.0))) was false" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.AVector.apply(scala.Array.apply(5.0, 1.0, 2.0)), Interpret.AOperator.apply(&quot;+&quot;), Interpret.LRBrac, Interpret.ANumber.apply(4.0), Interpret.AOperator.apply(&quot;|&quot;), Interpret.ANumber.apply(5.0), Interpret.RRBrac, Interpret.AOperator.apply(&quot;take&quot;), Interpret.ANumber.apply(2.0), Interpret.AOperator.apply(&quot;drop&quot;), Interpret.AOperator.apply(&quot;iota&quot;), Interpret.ANumber.apply(5.0))), Interpret.AVector.apply(scala.Array.apply(8.0, 4.0, 5.0))) was false
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1685)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at org.mq.interpret.TokensTests.$anonfun$new$30(InterpretTests.scala:212)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="FULL EVAL: should handle complex expressions - primes" time="0.0">
                                                 <failure message="TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.LRBrac, Interpret.AOperator.apply(&quot;~&quot;), Interpret.ASymbol.apply(&quot;r&quot;), Interpret.AOperator.apply(&quot;mem&quot;), Interpret.ASymbol.apply(&quot;r&quot;), Interpret.AOperator.apply(&quot;out&quot;), Interpret.AOperator.apply(&quot;.&quot;), Interpret.AOperator.apply(&quot;mul&quot;), Interpret.ASymbol.apply(&quot;r&quot;), Interpret.RRBrac, Interpret.AOperator.apply(&quot;/&quot;), Interpret.ASymbol.apply(&quot;r&quot;), Interpret.Assign, Interpret.ANumber.apply(1.0), Interpret.AOperator.apply(&quot;drop&quot;), Interpret.AOperator.apply(&quot;iota&quot;), Interpret.ANumber.apply(20.0))), Interpret.AVector.apply(scala.Array.apply(2.0, 3.0, 5.0, 7.0, 11.0, 13.0, 17.0, 19.0))) was false" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.LRBrac, Interpret.AOperator.apply(&quot;~&quot;), Interpret.ASymbol.apply(&quot;r&quot;), Interpret.AOperator.apply(&quot;mem&quot;), Interpret.ASymbol.apply(&quot;r&quot;), Interpret.AOperator.apply(&quot;out&quot;), Interpret.AOperator.apply(&quot;.&quot;), Interpret.AOperator.apply(&quot;mul&quot;), Interpret.ASymbol.apply(&quot;r&quot;), Interpret.RRBrac, Interpret.AOperator.apply(&quot;/&quot;), Interpret.ASymbol.apply(&quot;r&quot;), Interpret.Assign, Interpret.ANumber.apply(1.0), Interpret.AOperator.apply(&quot;drop&quot;), Interpret.AOperator.apply(&quot;iota&quot;), Interpret.ANumber.apply(20.0))), Interpret.AVector.apply(scala.Array.apply(2.0, 3.0, 5.0, 7.0, 11.0, 13.0, 17.0, 19.0))) was false
	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1685)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at org.mq.interpret.TokensTests.$anonfun$new$31(InterpretTests.scala:220)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.invokeWithFixture$1(FlatSpecLike.scala:1680)
	at org.scalatest.FlatSpecLike.$anonfun$runTest$1(FlatSpecLike.scala:1692)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FlatSpecLike.runTest(FlatSpecLike.scala:1692)
	at org.scalatest.FlatSpecLike.runTest$(FlatSpecLike.scala:1674)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$runTests$1(FlatSpecLike.scala:1750)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FlatSpecLike.runTests(FlatSpecLike.scala:1750)
	at org.scalatest.FlatSpecLike.runTests$(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1685)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1685)
	at org.scalatest.FlatSpecLike.$anonfun$run$1(FlatSpecLike.scala:1795)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FlatSpecLike.run(FlatSpecLike.scala:1795)
	at org.scalatest.FlatSpecLike.run$(FlatSpecLike.scala:1793)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1685)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:113)
	at sbt.TestRunner.run(TestFramework.scala:124)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:282)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:246)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFramework$$anon$2$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:282)
	at sbt.TestFunction.apply(TestFramework.scala:294)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:309)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
	at sbt.std.Transform$$anon$4.work(System.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
	at sbt.Execute.work(Execute.scala:278)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
</failure>
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="CUSTOM TEST CASES should return Assign for &lt;-" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="CUSTOM TEST CASES should return LRBrac for (" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="CUSTOM TEST CASES should return just the number even if there's a +" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="CUSTOM TEST CASES should handle a string operators like mul" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="CUSTOM TEST CASES should interpret operations without spaces (mul)" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="CUSTOM TEST CASES should interpret operations without spaces (+)" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="CUSTOM TEST CASES should interpret operations without spaces (Assign)" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="MONADIC FUNCTION TEST CASES should handle monadic operations (+) for ANumber" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="MONADIC FUNCTION TEST CASES should handle monadic operations (+) for AVector" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="MONADIC FUNCTION TEST CASES should handle monadic operations (-) for ANumber" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="MONADIC FUNCTION TEST CASES should handle monadic operations (-) for AVector" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="MONADIC FUNCTION TEST CASES should handle monadic operations (-) for AMatrix" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should handle summing two matricies" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should Number rho number" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should Number rho Vector" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should Vector rho Number" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should Vector rho Vector" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should do take with negative number" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should do drop" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should do drop with negative number" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should floor a number" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should ceil a number" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should find minimum" time="0.0">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should find maximum" time="0.001">
                                                 
                                               </testcase><testcase classname="org.mq.interpret.TokensTests" name="Dyadic FUNCTION TEST CASES should return abs value" time="0.0">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>