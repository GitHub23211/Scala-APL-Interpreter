sbt
run
3 + 5
run
2 + 7 3 4
run
test
run
test
run
test
run
test
run
test
run
333
run
rn
run
test
run
test
run
test
run
test
run
test
run 
run
test
run
test
run 3 + 4
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
tet
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
.test
test
yrdy
test
run
test
run
+1
run
test
run
test
run
test
run
test
run
test
run
test
run
rn
run
test
run
test
run
test
run
test
run
test
rn
run
test
run
test
  def reductivePlus(a:Array[Double]):Array[Double] = a.reduce(_ + _)test
test
run
test
run
test
run
test
run
test
run
test
+1
run
run +1
run
test
run
test
run
test
run
test
run
+1
run
test
run
test
run
test
run
test
run
rn
run
test
run
test
run
test
run
test
run
test
run
run 
+1
run
+1
run
test
run
test
run
      case(AOperator("out"), "+") => outerProductOp(dyadicPlus, leftArg, a)run
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
rub
run
test
run
test
run
test
run
test
1 + (2 * 3)
run
test
run
test
run
test
run
rn
run
test
run
ruyn
run
test
monadicOp(monadicMinus, x)test
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
test
run
yrdy
test
run
test
run
test
