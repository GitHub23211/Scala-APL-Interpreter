[0m[[0m[0minfo[0m] [0m[0m[32mTokensTests:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPARSING: pattern match[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle negative number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle function symbols[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle names[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle composite symbols[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mstrToAObj[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a name[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a negative number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle an operator[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mtokensToAObjs[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a single name[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a single number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a simple expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a more-complex expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSIMPLE EVAL:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should add two numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should mod two numbers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should do iota number[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should do membership[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should do monadic rho *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: rho (of class java.lang.String)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.applyMonadicOperation(Interpret.scala:200)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:231)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$18(InterpretTests.scala:134)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should do dyadic rho *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: AVector(2.0, 2.0) (of class org.mq.interpret.Interpret$AVector)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:236)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$19(InterpretTests.scala:139)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should do take *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: take (of class java.lang.String)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.applyDyadicOperation(Interpret.scala:190)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:238)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$20(InterpretTests.scala:145)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMIXED SHAPE:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should add number and vector *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.ANumber.apply(4.0), Interpret.AOperator.apply("+"), Interpret.AVector.apply(scala.Array.apply(3.0, 1.0, 4.0, 1.0, 5.0)))), Interpret.AVector.apply(scala.Array.apply(7.0, 5.0, 8.0, 5.0, 9.0))) was false (InterpretTests.scala:152)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should treat one-element vector as scalar *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: AVector(2.0, 3.0) (of class org.mq.interpret.Interpret$AVector)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:236)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$22(InterpretTests.scala:158)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should max vector and vector *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: AVector(7.0, 1.0, 3.0, 2.0, 6.0) (of class org.mq.interpret.Interpret$AVector)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:236)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$23(InterpretTests.scala:164)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mVARIABLES:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should work *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  TokensTests.this.same(Interpret.exec(scala.collection.immutable.List.apply[Product with Serializable with org.mq.interpret.Interpret.AObject](Interpret.ASymbol.apply("x"), Interpret.AOperator.apply("+"), Interpret.ANumber.apply(3.0), Interpret.AOperator.apply("mul"), Interpret.ASymbol.apply("x"), Interpret.Assign, Interpret.ANumber.apply(7.0))), Interpret.ANumber.apply(28.0)) was false (InterpretTests.scala:171)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mOPERATORS:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should reduce a vector with + *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: / (of class java.lang.String)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.applyMonadicOperation(Interpret.scala:200)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:240)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$25(InterpretTests.scala:177)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should reduce a matrix with mul *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: / (of class java.lang.String)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.applyMonadicOperation(Interpret.scala:200)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:240)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$26(InterpretTests.scala:183)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should do outer product *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: . (of class java.lang.String)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.applyMonadicOperation(Interpret.scala:200)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:240)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$27(InterpretTests.scala:190)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should do inner product *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: . (of class java.lang.String)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.applyMonadicOperation(Interpret.scala:200)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:240)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$28(InterpretTests.scala:199)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mFULL EVAL:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should handle bracketted expressions *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: RRBrac (of class org.mq.interpret.Interpret$RRBrac$)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:236)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$29(InterpretTests.scala:206)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.FlatSpecLike$$anon$5.apply(FlatSpecLike.scala:1682)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should handle complex expressions *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: drop (of class java.lang.String)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.applyDyadicOperation(Interpret.scala:190)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:238)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$30(InterpretTests.scala:215)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should handle complex expressions - primes *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  scala.MatchError: drop (of class java.lang.String)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.applyDyadicOperation(Interpret.scala:190)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.evalWithRightArg(Interpret.scala:238)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.eval(Interpret.scala:174)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.Interpret$.exec(Interpret.scala:151)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.mq.interpret.TokensTests.$anonfun$new$31(InterpretTests.scala:225)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCUSTOM TEST CASES[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return Assign for <-[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return LRBrac for ([0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return just the number even if there's a +[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle a string operators like mul[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should interpret operations without spaces (mul)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should interpret operations without spaces (+)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should interpret operations without spaces (Assign)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle monadic operations (+)[0m[0m
